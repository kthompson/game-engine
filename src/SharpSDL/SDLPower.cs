// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace SharpSDL
{
    /// <summary>The basic state for the system's power supply.</summary>
    public enum PowerState
    {
        /// <summary>cannot determine power status</summary>
        POWERSTATE_UNKNOWN = 0,
        /// <summary>Not plugged in, running on the battery</summary>
        POWERSTATE_ON_BATTERY = 1,
        /// <summary>Plugged in, no battery available</summary>
        POWERSTATE_NO_BATTERY = 2,
        /// <summary>Plugged in, charging battery</summary>
        POWERSTATE_CHARGING = 3,
        /// <summary>Plugged in, battery charged</summary>
        POWERSTATE_CHARGED = 4
    }

    public unsafe partial class SDL_power
    {
        public partial struct __Internal
        {
            [SuppressUnmanagedCodeSecurity]
            [DllImport("SDL2", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="SDL_GetPowerInfo")]
            internal static extern global::SharpSDL.PowerState GetPowerInfo(int* secs, int* pct);
        }

        /// <summary>Get the current power supply details.</summary>
/// <param name="secs">
/// <para>Seconds of battery life left. You can pass a NULL here if</para>
/// <para>you don't care. Will return -1 if we can't determine a</para>
/// <para>value, or we're not running on a battery.</para>
/// </param>
/// <param name="pct">
/// <para>Percentage of battery life left, between 0 and 100. You can</para>
/// <para>pass a NULL here if you don't care. Will return -1 if we</para>
/// <para>can't determine a value, or we're not running on a battery.</para>
/// </param>
/// <returns>The state of the battery (if any).</returns>
        public static global::SharpSDL.PowerState GetPowerInfo(ref int secs, ref int pct)
        {
            fixed (int* __secs0 = &secs)
            {
                var __arg0 = __secs0;
                fixed (int* __pct1 = &pct)
                {
                    var __arg1 = __pct1;
                    var __ret = __Internal.GetPowerInfo(__arg0, __arg1);
                    return __ret;
                }
            }
        }
    }
}
